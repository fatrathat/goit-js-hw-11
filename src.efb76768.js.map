{"version":3,"sources":["fetchPhotos.js","index.js"],"names":["fetchPhotos","name","objParams","URLSearchParams","key","q","image_type","orientation","safesearch","searchParams","fetch","forEach","value","then","responce","ok","Error","status","json","refs","form","document","querySelector","gallery","getPhotos","photo","markup","hits","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","innerHTML","handleSubmit","event","preventDefault","searchQuery","data","catch","e","console","log","addEventListener"],"mappings":";;;AAAO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EAAA,MAAMA,EAAcC,IACnBC,MAAAA,EAAY,IAAIC,gBAAgB,CACpCC,IAAK,qCACLC,EAAGJ,EACHK,WAAY,QACZC,YAAa,aACbC,WAAY,SAGVC,IAAAA,EAAe,GAKZC,OAJPR,EAAUS,QAAQ,CAACC,EAAOX,KACxBQ,MAAmBR,KAAQW,OAGtBF,kCAAkCD,KAAgBI,KAAKC,IACxD,IAACA,EAASC,GACN,MAAA,IAAIC,MAAMF,EAASG,QAEpBH,OAAAA,EAASI,UAlBb,QAAA,YAAA;;AC6CP,aA7CA,QAAA,oBACA,QAAA,mBACA,IAAA,EAAA,QAAA,iBAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,gBAC7BC,QAASF,SAASC,cAAc,aAG5BE,EAAYC,IACVC,MAAAA,EAASD,EAAME,KAClBC,IAAI,EAAGC,aAAAA,EAAcC,cAAAA,EAAeC,KAAAA,EAAMC,MAAAA,EAAOC,MAAAA,EAAOC,SAAAA,EAAUC,UAAAA,4DAE3CN,WAAsBE,oIAGlBC,yGAGAC,4GAGGC,6GAGCC,+EAK/BC,KAAK,KACRjB,EAAKI,QAAQc,UAAYX,GAGrBY,EAAeC,IACnBA,EAAMC,kBACMrB,EAAAA,EAAAA,aAAAA,EAAKC,KAAKqB,YAAY7B,OAC/BC,KAAK6B,IACJlB,EAAUkB,KAEXC,MAAMC,IACLC,QAAQC,IAAIF,MAIlBzB,EAAKC,KAAK2B,iBAAiB,SAAUT","file":"src.efb76768.js","sourceRoot":"../src","sourcesContent":["export const fetchPhotos = name => {\n  const objParams = new URLSearchParams({\n    key: '27639278-974e1c7751522d3c9b2b4743f',\n    q: name,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n  });\n\n  let searchParams = '';\n  objParams.forEach((value, name) => {\n    searchParams += `${name}=${value}&`;\n  });\n\n  return fetch(`https://pixabay.com/api/?${searchParams}`).then(responce => {\n    if (!responce.ok) {\n      throw new Error(responce.status);\n    }\n    return responce.json();\n  });\n};\n","import './css/styles.css';\nimport './css/reset.css';\nimport { fetchPhotos } from './fetchPhotos';\n\nconst refs = {\n  form: document.querySelector('#search-form'),\n  gallery: document.querySelector('.gallery'),\n};\n\nconst getPhotos = photo => {\n  const markup = photo.hits\n    .map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => {\n      return `<div class=\"photo-card\">\n                <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n                <div class=\"info\">\n                  <p class=\"info-item\">\n                    <b>Likes: ${likes}</b>\n                  </p>\n                  <p class=\"info-item\">\n                    <b>Views: ${views}</b>\n                  </p>\n                  <p class=\"info-item\">\n                    <b>Comments: ${comments}</b>\n                  </p>\n                  <p class=\"info-item\">\n                    <b>Downloads: ${downloads}</b>\n                  </p>\n                </div>\n              </div>`;\n    })\n    .join(' ');\n  refs.gallery.innerHTML = markup;\n};\n\nconst handleSubmit = event => {\n  event.preventDefault();\n  fetchPhotos(refs.form.searchQuery.value)\n    .then(data => {\n      getPhotos(data);\n    })\n    .catch(e => {\n      console.log(e);\n    });\n};\n\nrefs.form.addEventListener('submit', handleSubmit);\n"]}